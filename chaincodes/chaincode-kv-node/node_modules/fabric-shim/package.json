{
  "name": "fabric-shim",
  "version": "2.4.2",
  "tag": "release",
  "description": "A node.js implementation of Hyperledger Fabric chaincode shim, to allow endorsing peers and user-provided chaincodes to communicate with each other",
  "main": "index.js",
  "bin": {
    "fabric-chaincode-node": "cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hyperledger/fabric-chaincode-node"
  },
  "keywords": [
    "fabric-shim",
    "Hyperledger Fabric",
    "Fabric Shim"
  ],
  "engines": {
    "node": "^16.4.0",
    "npm": "^8.0.0"
  },
  "types": "./types/index.d.ts",
  "license": "Apache-2.0",
  "nyc": {
    "exclude": [
      "coverage/**",
      "test/**",
      "gulpfile.js",
      "bundle.js"
    ],
    "reporter": [
      "text-summary",
      "cobertura",
      "html"
    ],
    "all": true,
    "check-coverage": true,
    "statements": 100,
    "branches": 100,
    "functions": 100,
    "lines": 100
  },
  "dependencies": {
    "@fidm/x509": "^1.2.1",
    "@grpc/grpc-js": "^1.4.1",
    "@grpc/proto-loader": "^0.6.6",
    "@types/node": "^16.11.1",
    "ajv": "^6.12.2",
    "fabric-contract-api": "2.4.2",
    "fabric-shim-api": "2.4.2",
    "fs-extra": "^10.0.1",
    "reflect-metadata": "^0.1.13",
    "winston": "^3.7.2",
    "yargs": "^17.4.0",
    "yargs-parser": "^21.0.1"
  },
  "devDependencies": {
    "chai": "^4.3.4",
    "chai-as-promised": "^7.1.1",
    "chai-things": "^0.2.0",
    "cpx": "^1.5.0",
    "eslint": "^6.6.0",
    "mocha": "9.1.3",
    "mockery": "^2.1.0",
    "nyc": "15.1.0",
    "rewire": "6.0.0",
    "rimraf": "^3.0.2",
    "sinon": "13.0.1",
    "spec-junit-splitter-mocha-reporter": "1.0.1",
    "caniuse-lite": "~1.0.30001325"
  },
  "scripts": {
    "start": "./startup.sh",
    "compile": "tsc --project test/typescript",
    "test": "nyc mocha --recursive 'test/unit/**/*.js' --reporter spec-junit-splitter-mocha-reporter",
    "update:clean": "rimraf bundle.js bundle.d.ts protos && mkdirp protos",
    "update:copy": "cpx \"${GOPATH}/src/github.com/hyperledger/fabric-protos/**/*.proto\" protos --verbose",
    "update:pbjs": "pbjs -t static-module -p google-protos -p protos $(find google-protos protos -name \"*.proto\" -type f) -o bundle.js",
    "update:pbts": "pbts -o bundle.d.ts bundle.js",
    "update": "npm run update:clean && npm run update:copy && npm run update:pbjs && npm run update:pbts",
    "lint": "eslint ./lib",
    "build": "npm run lint & npm test 2>&1"
  },
  "readme": "[![NPM](https://nodei.co/npm/fabric-shim.svg?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/fabric-contract-api/)\n\n\n\n[![Version](https://badge.fury.io/js/fabric-shim.svg)](http://badge.fury.io/js/fabric-shim)\n\n\nThe `fabric-shim` provides the *chaincode interface*, a lower level API for implementing \"Smart Contracts\". To confirm that this is the same as the `fabric-shim` in previous versions of Hyperledger Fabric.\n\nDetailed explanation on the concept and programming model can be found here: [https://hyperledger-fabric.readthedocs.io/en/latest/smartcontract/smartcontract.html](https://hyperledger-fabric.readthedocs.io/en/latest/smartcontract/smartcontract.html).\n\n\n## Chaincode Interface\n\n### Installation\n```sh\nnpm install --save fabric-shim\n```\n\n### Usage\nThe [chaincode interface](https://hyperledger.github.io/fabric-chaincode-node/main/api/fabric-shim.ChaincodeInterface.html) contains two methods to be implemented:\n```javascript\nconst shim = require('fabric-shim');\n\nconst Chaincode = class {\n\tasync Init(stub) {\n\t\t// use the instantiate input arguments to decide initial chaincode state values\n\n\t\t// save the initial states\n\t\tawait stub.putState(key, Buffer.from(aStringValue));\n\n\t\treturn shim.success(Buffer.from('Initialized Successfully!'));\n\t}\n\n\tasync Invoke(stub) {\n\t\t// use the invoke input arguments to decide intended changes\n\n\t\t// retrieve existing chaincode states\n\t\tlet oldValue = await stub.getState(key);\n\n\t\t// calculate new state values and saves them\n\t\tlet newValue = oldValue + delta;\n\t\tawait stub.putState(key, Buffer.from(newValue));\n\n\t\treturn shim.success(Buffer.from(newValue.toString()));\n\t}\n};\n```\n\nStart the chaincode process and listen for incoming endorsement requests:\n```javascript\nshim.start(new Chaincode());\n```\n\n### API Reference\nVisit [API Reference](https://hyperledger.github.io/fabric-chaincode-node/main/api/) and click on \"Classes\" link in the navigation bar on the top to view the list of class APIs.\n\n## Support\nTested with node.js 8.9.0 (LTS).\n\n## License\n\nThis package is distributed under the\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0),\nsee LICENSE.txt for more information.\n"
}